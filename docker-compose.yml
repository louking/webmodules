version: "3.8"

# see .env for image version env variables
# see repo/settings/environments for image version env variables for github actions
services:

  app:
    build: 
      context: app
      args:
        - PYTHON_VER=${PYTHON_VER}
    restart: always
    secrets:
      - root-password
      - users-password
      - webmodules-password
    networks:
      - backend-network
      - frontend-network
    volumes:
      - ./config:/config:ro
    environment:
      - FLASK_DEBUG=True
      - APP_DATABASE=webmodules
      - APP_USER=webmodules
      - APP_PASSWORD_FILE=/run/secrets/webmodules-password
    command: ["./dbupgrade_and_run.sh", "gunicorn", "--reload", "--bind", "0.0.0.0:5000", "app:app"]

  web:
    build: 
      context: web
      args:
        - NGINX_VER=${NGINX_VER}
        - PHPMYADMIN_VER=${PHPMYADMIN_VER}
    restart: always
    depends_on:
      - app
    networks:
      - frontend-network
    ports:
      - ${WEBMODULES_PORT}:80
    # uncomment to debug
    # command: [nginx-debug, '-g', 'daemon off;']

  crond:
    build:
      context: crond
      args:
        - ALPINE_VER=${ALPINE_VER}
    restart: always
    networks:
      - backend-network
    secrets:
      - root-password
    volumes:
      - ./config/msmtprc:/etc/msmtprc:ro
    environment:
      - TZ=America/New_York
    # start crond with log level 8 in foreground, output to stderr
    command: ["crond", "-f", "-d", "8"]
    # use this to debug
    # command: ["crond", "-f", "-d", "8", "-l", "2", "-L", "/dev/stdout"]


secrets:
  root-password:
    file: config/db/root-password.txt
  users-password:
    file: config/db/users-password.txt
  webmodules-password:
    file: config/db/webmodules-password.txt

networks:
  backend-network:
    external: True
    name: docker-backend
  frontend-network:
